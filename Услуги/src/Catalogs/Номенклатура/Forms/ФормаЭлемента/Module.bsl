// @strict-types

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ГруппаНоменклатуры = Объект.Родитель;
	Объект.ВидНоменклатуры = ВидНоменклатуры(ГруппаНоменклатуры);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает вид номенклатуры см. Перечисления.ВидыНоменклатуры 
// 
// Параметры:
//  ГруппаНоменклатуры - СправочникСсылка.Номенклатура - Группа элемента справочника см. Справочники.Номенклатура
// 
// Возвращаемое значение:
//  ПеречислениеСсылка.ВидыНоменклатуры - пустая ссылка, если подходящий родитель не найден 
//  (Материалы или Услуги) или не указан на входе.
&НаСервере
Функция ВидНоменклатуры(ГруппаНоменклатуры)
	
	Если ГруппаНоменклатуры = Справочники.Номенклатура.ПустаяСсылка() Тогда
		Возврат Перечисления.ВидыНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	ТекущийЭлементНоменклатуры = ГруппаНоменклатуры;

	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	Номенклатура.Родитель,
						  |	Номенклатура.Родитель.Родитель,
						  |	Номенклатура.Родитель.Родитель.Родитель,
						  |	Номенклатура.Родитель.Родитель.Родитель.Родитель,
						  |	Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель
						  |ИЗ
						  |	Справочник.Номенклатура КАК Номенклатура
						  |ГДЕ
						  |	Номенклатура.Ссылка = &ТекущийЭлементНоменклатуры
						  |	И Номенклатура.ВидНоменклатуры ЕСТЬ NULL");

	Пока Истина Цикл
		Запрос.УстановитьПараметр("ТекущийЭлементНоменклатуры", ТекущийЭлементНоменклатуры);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Прервать;
		КонецЕсли;
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Для НомерКолонки = 0 По Результат.Колонки.Количество() - 1 Цикл
			ТекущийЭлементНоменклатуры = Выборка[НомерКолонки]; // СправочникСсылка.Номенклатура 
			
			// Если группы нет
			Если ТекущийЭлементНоменклатуры = Справочники.Номенклатура.ПустаяСсылка() Тогда
				Возврат Перечисления.ВидыНоменклатуры.ПустаяСсылка();
			Иначе
				Если Строка(ТекущийЭлементНоменклатуры) = "Услуги" Тогда
					Возврат Перечисления.ВидыНоменклатуры.Услуга;
				ИначеЕсли Строка(ТекущийЭлементНоменклатуры) = "Материалы" Тогда
					Возврат Перечисления.ВидыНоменклатуры.Материал;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
КонецФункции

#КонецОбласти